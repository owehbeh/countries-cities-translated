version: '3.8'

services:
  api:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: countries-cities-api
    ports:
      - "3000"
    labels:
      - "coolify.managed=true"
    environment:
      - NODE_ENV=production
      - PORT=3000
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_PASSWORD=${REDIS_PASSWORD:-}
      - GOOGLE_CLOUD_API_KEY=${GOOGLE_CLOUD_API_KEY}
      - COUNTRY_STATE_CITY_API_KEY=${COUNTRY_STATE_CITY_API_KEY}
      - ALLOWED_API_KEYS=${ALLOWED_API_KEYS:-}
      - ALLOWED_IPS=${ALLOWED_IPS:-}
    volumes:
      - ./assets:/app/assets:ro
    depends_on:
      redis:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  redis:
    image: redis:7-alpine
    container_name: countries-cities-redis
    expose:
      - "6379"
    command: >
      redis-server
      ${REDIS_PASSWORD:+--requirepass $REDIS_PASSWORD}
      --maxmemory 512mb
      --maxmemory-policy allkeys-lru
      --save 900 1
      --save 300 10
      --save 60 10000
      --appendonly yes
      --appendfsync everysec
      --auto-aof-rewrite-percentage 100
      --auto-aof-rewrite-min-size 64mb
    volumes:
      - redis_data:/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  redis_data:
    driver: local

networks:
  default:
    name: countries-cities-network